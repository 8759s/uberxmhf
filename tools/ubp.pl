#!/usr/bin/perl
# script to generate slab sentinel stub for blueprint conformance
# author: amit vasudevan (amitvasudevan@acm.org)

use Tie::File;
use File::Basename;
use Data::Dumper;

use lib dirname (__FILE__);
use upmf;	#load up the manifest parsing module


# command line inputs
my $g_slabsfile = $ARGV[0];
my $g_memoffsets = $ARGV[1];
my $g_ubpsentinelstubsdir = $ARGV[2];

$g_maxincldevlistentries = $ARGV[3];
$g_maxexcldevlistentries = $ARGV[4];
$g_maxmemoffsetentries = $ARGV[5];


my $g_rootdir;





$g_rootdir = dirname($g_slabsfile)."/";

print "slabsfile:", $g_slabsfile, "\n";
print "rootdir:", $g_rootdir, "\n";

print "parsing slab manifests...\n";
upmf_init($g_slabsfile, $g_memoffsets, $g_rootdir);
print "slab manifests parsed\n";

ubp_outputsentinelstubs($g_ubpsentinelstubsdir);

exit 0;



######
# output sentinel stubs
######
sub ubp_outputsentinelstubs {
	my($sentinelstubsdir) = @_;
	my $i=0;
	print "sentinel stubs dir:", $sentinelstubsdir, "\n";
	
	
	while($i < $g_totalslabs){
		if($slab_idtotype{$i} eq "VfT_SLAB"){
			ubp_outputsentinelstubforslab($sentinelstubsdir, $slab_idtoname{$i}, $i);
		}
	    $i=$i+1;
	}

}
######


######
# output sentinel stub for a given slab
######
sub ubp_outputsentinelstubforslab {
	my($sentinelstubsdir, $slabname, $slabid) = @_;
	my $fh_ubpsstubfile;
	my $sstubfilename;
	my $assertstring;


	#compute assert string 
	$assertstring = "(sp->src_slabid == ".$slabid." && ( 0x".$slab_idtocallmask{$slabid}."UL & sp->dst_slabid))";
	
	print "output sentinel stub: slabname: $slabname, slabid: $slabid \n";
	$sstubfilename = $sentinelstubsdir.$slabname."_sstub.ag.v.c";
	
	open($fh_ubpsstubfile, '>', $sstubfilename) or die "Could not open file '$sstubfilename' $!";
	print $fh_ubpsstubfile "\n/* autogenerated XMHF blue print conformance sentinel stub file */";
	print $fh_ubpsstubfile "\n/* author: amit vasudevan (amitvasudevan@acm.org) */";
	print $fh_ubpsstubfile "\n\n";
	print $fh_ubpsstubfile "#include <xmhf.h>\r\n";
	print $fh_ubpsstubfile "#include <xmhf-debug.h>\r\n";
	print $fh_ubpsstubfile "#include <xmhfgeec.h>\r\n";
	print $fh_ubpsstubfile "\n\n";
	print $fh_ubpsstubfile "#include <xc.h>\r\n";
    print $fh_ubpsstubfile "#include <".$slabname.".h>\r\n";
	print $fh_ubpsstubfile "\n\n";

	print $fh_ubpsstubfile "void __slab_callsentinel(slab_params_t *sp){\r\n";

	print $fh_ubpsstubfile "  /*\@assert $assertstring ; */\r\n";

	print $fh_ubpsstubfile "}\r\n";

	close $fh_ubpsstubfile;
	
}
######






















