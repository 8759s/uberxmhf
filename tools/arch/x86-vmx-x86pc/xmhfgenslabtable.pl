#!/usr/bin/perl
# script to generate XMHF slab physical memory extents
# based on the slab names provided
# author: amit vasudevan (amitvasudevan@acm.org)

my $i = 0;

print "\n/* autogenerated XMHF slab physical memory extents */";
print "\n/* author: amit vasudevan (amitvasudevan@acm.org) */";

print "\n#include <xmhf.h>";

print "\n";
print "\nextern u8 _xmhfhic_sharedro_start[];";
print "\nextern u8 _xmhfhic_sharedro_end[];";
print "\nextern u8 _xmhfhic_code_start[];";
print "\nextern u8 _xmhfhic_code_end[];";
print "\nextern u8 _xmhfhic_rwdata_start[];";
print "\nextern u8 _xmhfhic_rwdata_end[];";
print "\nextern u8 _xmhfhic_rodata_start[];";
print "\nextern u8 _xmhfhic_rodata_end[];";
print "\nextern u8 _xmhfhic_stack_start[];";
print "\nextern u8 _xmhfhic_stack_end[];";


print "\n";
print "\n__attribute__((section(\".data\"))) slab_physmem_extent_t _xmhfhic_init_setupdata_hic_physmem_extents[HIC_SLAB_PHYSMEM_MAXEXTENTS] = {";
	print "\n";
	print "\n	{.addr_start = _xmhfhic_sharedro_start, .addr_end = _xmhfhic_sharedro_end, .protection = 0},";
	print "\n	{.addr_start = _xmhfhic_code_start, .addr_end = _xmhfhic_code_end, .protection = 0},";
	print "\n	{.addr_start = _xmhfhic_rwdata_start, .addr_end = _xmhfhic_rwdata_end, .protection = 0},";
	print "\n	{.addr_start = _xmhfhic_rodata_start, .addr_end = _xmhfhic_rodata_end, .protection = 0},";
	print "\n	{.addr_start = _xmhfhic_stack_start, .addr_end = _xmhfhic_stack_end, .protection = 0},";
print "\n};";




while( $i <= $#ARGV) {
	print "\n";
	print "\nextern u8 _slab_$ARGV[$i]_code_start[];";
	print "\nextern u8 _slab_$ARGV[$i]_code_end[];";
	print "\nextern u8 _slab_$ARGV[$i]_rwdata_start[];";
	print "\nextern u8 _slab_$ARGV[$i]_rwdata_end[];";
	print "\nextern u8 _slab_$ARGV[$i]_rodata_start[];";
	print "\nextern u8 _slab_$ARGV[$i]_rodata_end[];";
	print "\nextern u8 _slab_$ARGV[$i]_stack_start[];";
	print "\nextern u8 _slab_$ARGV[$i]_stack_end[];";
	print "\nextern u8 _slab_$ARGV[$i]_dmadata_start[];";
	print "\nextern u8 _slab_$ARGV[$i]_dmadata_end[];";
#	print "\nextern u8 _slab_$ARGV[$i]_entrypoint[];";

	$i++;
}

print "\n";
print "\n__attribute__((section(\".data\"))) slab_physmem_extent_t _xmhfhic_init_setupdata_slab_physmem_extents[XMHF_HIC_MAX_SLABS][HIC_SLAB_PHYSMEM_MAXEXTENTS] = {";

$i = 0;
while( $i <= $#ARGV) {
#while( $i < 1) {
	print "\n";
	print "\n{";
	print "\n	{.addr_start = _slab_$ARGV[$i]_code_start, .addr_end = _slab_$ARGV[$i]_code_end, .protection = 0},";
	print "\n	{.addr_start = _slab_$ARGV[$i]_rwdata_start, .addr_end = _slab_$ARGV[$i]_rwdata_end, .protection = 0},";
	print "\n	{.addr_start = _slab_$ARGV[$i]_rodata_start, .addr_end = _slab_$ARGV[$i]_rodata_end, .protection = 0},";
	print "\n	{.addr_start = _slab_$ARGV[$i]_stack_start, .addr_end = _slab_$ARGV[$i]_stack_end, .protection = 0},";
	print "\n	{.addr_start = _slab_$ARGV[$i]_dmadata_start, .addr_end = _slab_$ARGV[$i]_dmadata_end, .protection = 0},";
	print "\n},";

	$i++;
}

# rich guest slab

#	print "\n";
#	print "\n{";
#	print "\n	{.addr_start = 0, .addr_end = __TARGET_BASE_XMHF, .protection = 0},";
#	print "\n	{.addr_start = (__TARGET_BASE_XMHF + __TARGET_SIZE_XMHF), .addr_end = ADDR_4GB, .protection = 0},";
#	print "\n	{.addr_start = 0, .addr_end = 0, .protection = 0},";
#	print "\n	{.addr_start = 0, .addr_end = 0, .protection = 0},";
#	print "\n	{.addr_start = 0, .addr_end = 0, .protection = 0},";
#	print "\n},";



print "\n};";

exit 0;
