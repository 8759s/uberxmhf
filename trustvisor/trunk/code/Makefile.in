#-------------------------------------------------------------------------------
# top-level makefile for apps based on emhf
# author: amit vasudevan (amitvasudevan@acm.org)

# the build process goes like this:
# we first enter app and run the top-level makefile there
#   - this will create app objs in app/objects/*
# we then enter emhfcore and run the top-level makefile there
#   - this will create init and hypervisor binaries for the app
#			depending on the h/w platform (x86) selected
# we finally move the above two to the top-level directory where this
# makefile is located

#-----options that need tweaking w.r.t your development

    #your target name and version
	export TARGET = emhfapp
    export TARGET_VERSION = 0
    export TARGET_SUBVERSION = 1

    #h/w platform, current choices are svm (for AMD) and vmx (for Intel)
    #export TARGET_HWPLATFORM := svm

    #h/w platform, current choices are x86
	export TARGET_HWPLATFORM := x86
    #MP/UP selection, y=Multiprocessor, n=Uniprocessor
    export MP_VERSION := @MP_VERSION@
    #misc. configuaration w.r.t serial debugging and NPT/EPT support
	export NESTED_PAGING := y
    export DEBUG_SERIAL := @DEBUG_SERIAL@
    export DEBUG_SERIAL_PORT := @DEBUG_SERIAL_PORT@

	export DEBUG_VGA	:= @DEBUG_VGA@

#-----configuration that typically need not be touched
  #ifeq ($(TARGET_HWPLATFORM), svm)
  #export EMHFCOREDIR := ./emhfcore/amd-v-mp
  #endif
  #ifeq ($(TARGET_HWPLATFORM), vmx)
  #export EMHFCOREDIR := ./emhfcore/intel-vt-mp
  #endif

  #ifeq ($(TARGET_HWPLATFORM), x86)
  export EMHFCOREDIR := $(realpath @EMHFCOREDIR@)
  #endif

  export BASEDIR = @abs_top_srcdir@
  export APPOBJECTSDIR = $(BASEDIR)/app/objects
  export EMHF_INCLUDEDIR = $(EMHFCOREDIR)/include
  export INCLUDEDIR = $(EMHF_INCLUDEDIR)
  export APP_INCLUDEDIR = $(BASEDIR)/app/include
  export EMHFAPP = y

  prefix=@prefix@
  exec_prefix=@exec_prefix@
  libdir=@libdir@
  includedir=@includedir@
  pkgconfigdir=@pkgconfigdir@
  pkgincludedir=@pkgincludedir@

#-----tools
  export CC = @CC@
  export AS = @AS@
  export LD = @LD@
  export OBJDUMP = @OBJDUMP@
  export OBJCOPY = @OBJCOPY@
  export STRIP = @STRIP@
  export O_CC = /bin/gcc
  export RM = @RM@
  export CP = @CP@
  export O_LD = /bin/ld
  export TAR = @TAR@
  export SED = @SED@
  export MKDIR = @MKDIR@
  export CAT = @CAT@

#-----basic flags for compiling
  CFLAGS = -fno-builtin -fno-common -fno-strict-aliasing -iwithprefix include
  CFLAGS += -fno-stack-protector
  CFLAGS += -Wimplicit-function-declaration
  CFLAGS += -Wall
  CFLAGS += -Wparentheses
  CFLAGS += -Wunused
  CFLAGS += -Wstrict-prototypes -Wdeclaration-after-statement 
  CFLAGS += -Werror -Wno-pointer-arith -Wextra -Wfloat-equal 
  CFLAGS += -Wbad-function-cast -Wcast-qual -Wsign-compare 
  CFLAGS += -Waggregate-return
  CFLAGS += -Winline
  CFLAGS += -m32 -march=k8
  CFLAGS += -mno-sse2
  CFLAGS += -nostdinc -pipe -I$(EMHF_INCLUDEDIR) -I$(APP_INCLUDEDIR)

#-----generate compiler/assembler defines from configuration options selected
  ifeq ($(NESTED_PAGING), y)
  CFLAGS += -D__NESTED_PAGING__
  endif
  ifeq ($(DEBUG_SERIAL), y)
  CFLAGS += -D__DEBUG_SERIAL__
  CFLAGS += -DDEBUG_PORT=$(DEBUG_SERIAL_PORT)
	endif
  ifeq ($(DEBUG_VGA), y)
  CFLAGS += -D__DEBUG_VGA__
  endif
  ifeq ($(MP_VERSION), y)
  CFLAGS += -D__MP_VERSION__
  endif

  ASFLAGS = $(CFLAGS) -D__ASSEMBLY__

  export CFLAGS
  export ASFLAGS

#-----build rules 
.PHONY: all
all:
    # make app components
	mkdir -p $(APPOBJECTSDIR)
	cd app && $(MAKE) -w all

    # make emhf core components and generate loader and runtime	
	cd $(EMHFCOREDIR) && $(MAKE) -w all

# default target: headers and binaries
install: install-dev install-bin

# install headers
install-dev:
	install -d $(DESTDIR)$(pkgconfigdir)
	install --mode=644 trustvisor.pc $(DESTDIR)$(pkgconfigdir)

	install -d $(DESTDIR)$(pkgincludedir)
	install app/include/trustvisor.h $(DESTDIR)$(pkgincludedir)
	install app/include/tv_utpm.h $(DESTDIR)$(pkgincludedir)

# install loader and runtime binaries to installation location
# TODO: make '/boot' configurable with ./configure
install-bin:
	install -d $(DESTDIR)/boot
	install --mode=644 $(EMHFCOREDIR)/hypervisor-$(TARGET_HWPLATFORM).bin.gz $(DESTDIR)/boot
	install --mode=644 $(EMHFCOREDIR)/init/init-$(TARGET_HWPLATFORM).bin $(DESTDIR)/boot

#------test rules
export CMOCKDIR:=$(realpath @CMOCKDIR@)
export UNITYDIR:=$(realpath @UNITYDIR@)
test:
	cd test && $(MAKE) -w all

#------cleanup rules
.PHONY: clean test
clean: 
	cd app && $(MAKE) -w clean
	rm -rf $(APPOBJECTSDIR)
	cd $(EMHFCOREDIR) && $(MAKE) -w clean
	cd test && $(MAKE) -w clean
	rm -f config.log
	rm -f config.status

#-----autoconf rules
Makefile: Makefile.in config.status
	./config.status $@

config.status: configure
	./config.status --recheck

configure: configure.ac
	./autogen.sh
