# Rootest Makefile for EMHF and an App
# Builds a bunch of subdirectories here, and then builds the app

# define EMHF root directory and EMHF core include directory for
# apps
export EMHF_ROOT := $(CURDIR)
export EMHF_INCLUDE := $(CURDIR)/x86/include

# define CMOCK and UNITY for app unit test support
export CMOCKDIR := @CMOCKDIR@
export UNITYDIR := @UNITYDIR@

# Options that aspire to be automatically controlled, but are currently
# basically required and everything breaks without them. FIXME!
export TARGET_HWPLATFORM := x86
export NESTED_PAGING := y

#where you want loader and runtime binaries to go
export HYPOUTDIR = $(CURDIR)

# TODO: Consider automating discovery of subdirs (presence of Makefile*?)
# E.g., have a target architecure and include that version of the core
LIBDIRS = libemhfc libemhfutil libtv_utpm libemhfcrypto
SUBDIRS = $(LIBDIRS) $(TARGET_HWPLATFORM)

# App's source tree root (
export APP_ROOT := @APP_ROOT@
# The APP_ARCHIVE is what MUST contain ALL of the App's binary code
# 'make install-dev' is handled indepdendently
export APP_ARCHIVE := $(APP_ROOT)/@APP_ARCHIVE@

export ADDL_LIBS := $(foreach lib,$(LIBDIRS),$(CURDIR)/$(lib)/$(lib).a)
export ADDL_INCLUDES := -I$(APP_ROOT)/app/include $(foreach dir,$(SUBDIRS),-I$(CURDIR)/$(dir)/include)

##################################################################################
### BEGIN Variables controlled using autoconf
##################################################################################
# Build-time configuration options; our project IS UNIQUE in this aspect
# For an explanation of these options, see configure.ac or run:
# ./configure --help
export MP_VERSION := @MP_VERSION@
export DEBUG_SERIAL := @DEBUG_SERIAL@
export DEBUG_SERIAL_PORT := @DEBUG_SERIAL_PORT@
export DEBUG_VGA := @DEBUG_VGA@

# Path settings; our project is not unique in this aspect
export prefix=@prefix@
export exec_prefix=@exec_prefix@
export libdir=@libdir@
export includedir=@includedir@
export pkgconfigdir=@pkgconfigdir@
export pkgincludedir=@pkgincludedir@

# Tool settings; our project is not unique in this aspect
export CC = @CC@
export AS = @AS@
export LD = @LD@
export OBJDUMP = @OBJDUMP@
export OBJCOPY = @OBJCOPY@
export STRIP = @STRIP@
export RM = @RM@
export CP = @CP@
export TAR = @TAR@
export SED = @SED@
export MKDIR = @MKDIR@
export CAT = @CAT@
##################################################################################
### END Variables controlled using autoconf
##################################################################################


.PHONY: all
# all: $(APP_ARCHIVE) subdirs init-late
all: $(APP_ARCHIVE) subdirs 

$(APP_ARCHIVE):
	cd $(APP_ROOT) && $(MAKE) -w all

.PHONY: subdirs
subdirs: $(SUBDIRS)
	@for i in $(SUBDIRS); \
	do \
		(cd $$i && echo "Making all in $$i..." && $(MAKE) -w all) || exit 1; \
	done;

.PHONY: init-late
init-late: $(APP_ARCHIVE) subdirs
	cd $(TARGET_HWPLATFORM) && make -w init-late

.PHONY: install
install: install-dev install-bin

.PHONY: install-bin
install-bin:
	# Install the _actual_ final product
	install -d $(DESTDIR)/boot
	install --mode=644 $(HYPOUTDIR)/hypervisor-$(TARGET_HWPLATFORM).bin.gz $(DESTDIR)/boot
	install --mode=644 $(HYPOUTDIR)/init-$(TARGET_HWPLATFORM).bin $(DESTDIR)/boot

.PHONY: install-dev
install-dev:
	cd $(APP_ROOT) && $(MAKE) -w install-dev
	@for i in $(SUBDIRS) ;\
	do \
		(cd $$i && echo "making install-dev in $$i..." && $(MAKE) -w install-dev) || exit 1; \
	done;

# Currently the only tests we have are in the TrustVisor tree
.PHONY: test
test:
	cd $(APP_ROOT) && $(MAKE) -w test

.PHONY: clean distclean init-late-clean
clean:
	cd $(APP_ROOT) && $(MAKE) -w clean
	@for i in $(SUBDIRS) ;\
	do \
		(cd $$i && echo "making clean in $$i..." && $(MAKE) -w clean) || exit 1; \
	done;

distclean: clean
	$(RM) config.log config.status
	# http://www.gnu.org/software/automake/manual/automake.html#Clean
	$(RM) -rf Makefile

init-late-clean:
	cd $(TARGET_HWPLATFORM) && make -w init-late-clean
	
#-----autoconf rules
Makefile: Makefile.in config.status
	./config.status $@

config.status: configure
	./config.status --recheck

configure: configure.ac
	./autogen.sh

