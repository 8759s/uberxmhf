# common Makefile boilerplate for XMHF
# author: amit vasudevan (amitvasudevan@acm.org)

mydir := $(dir $(lastword $(MAKEFILE_LIST)))
mydir := $(realpath $(mydir))

######
# common paths
######

# directory where this Makefile resides (source root)
export XMHF_DIR := $(mydir)

# objects directory (used for building binaries without polluting source namespace)
export XMHF_OBJDIR = $(XMHF_DIR)/_objects

# XMHF libs dirs and object locations
export XMHF_LIBDIRS := $(wildcard $(XMHF_DIR)/uberspark/libs/lib*)
export XMHF_LIBS_OBJECTS_DIR := $(XMHF_OBJDIR)/_objs_libs

# construct include paths
export ADDL_INCLUDES := -I$(XMHF_DIR)/uberspark/include 
ADDL_INCLUDES += -I$(XMHF_DIR)/uberspark/hwm/include
ADDL_INCLUDES += -I$(XMHF_DIR)/uxmhf/include
ADDL_INCLUDES += -I$(XMHF_DIR)/uxmhf/xmhf-uobjs/include 
ADDL_INCLUDES += -I$(XMHF_DIR)/uxmhf/libs/libxmhfdebug/include
XMHFLIBS_INC = $(foreach dir,$(XMHF_LIBDIRS),-I$(dir)/include)
ADDL_INCLUDES += $(XMHFLIBS_INC)

# construct module list that comprise the hardware model
export V_XMHFHWM_MODULES := $(realpath $(wildcard $(XMHF_DIR)/uberspark/hwm/*.c))

# construct module list that comprise libxmhfhw
V_LIBXMHFHW_MODULES_DIR := $(realpath $(XMHF_DIR)/uberspark/libs/libxmhfhw/)
V_LIBXMHFHW_MODULES_ABS := $(wildcard $(XMHF_DIR)/uberspark/libs/libxmhfhw/*.c)
V_LIBXMHFHW_MODULES_ABS += $(wildcard $(XMHF_DIR)/uberspark/libs/libxmhfhw/*.cS)
V_LIBXMHFHW_MODULES := $(patsubst $(XMHF_DIR)/uberspark/libx/libxmhfhw/%, %, $(V_LIBXMHFHW_MODULES_ABS))
export V_LIBXMHFHW_MODULES_DIR;
export V_LIBXMHFHW_MODULES;

# for verification
export V_ADDL_INCLUDES := -cpp-extra-args=-I$(XMHF_DIR)/uberspark/include -cpp-extra-args=-I$(XMHF_DIR)/uxmhf/xmhf-uobjs/include -cpp-extra-args=-I$(XMHF_DIR)/uberspark/hwm/include
V_XMHFLIBS_INC = $(foreach dir,$(XMHF_LIBDIRS),-cpp-extra-args=-I$(dir)/include)
V_ADDL_INCLUDES += $(V_XMHFLIBS_INC)
V_ADDL_INCLUDES += -I$(XMHF_DIR)/uxmhf/libs/libxmhfdebug/include






######
# autoconf controlled variables
######

export DEBUG_SERIAL := @DEBUG_SERIAL@
export DEBUG_SERIAL_PORT := @DEBUG_SERIAL_PORT@
export DEBUG_VGA := @DEBUG_VGA@
export DRT := @DRT@
export DMAP := @DMAP@

export XMHF_TARGET_CPU := @TARGET_CPU@
export XMHF_TARGET_CONTAINER := @TARGET_CONTAINER@
export XMHF_TARGET_PLATFORM := @TARGET_PLATFORM@
export XMHF_TARGET_TRIAD := $(XMHF_TARGET_CPU)-$(XMHF_TARGET_CONTAINER)-$(XMHF_TARGET_PLATFORM)

export prefix=@prefix@
export exec_prefix=@exec_prefix@
export libdir=@libdir@
export includedir=@includedir@
export pkgconfigdir=@pkgconfigdir@
export pkgincludedir=@pkgincludedir@

export CC = @CC@				#
export CCERT = @CCERT@			#
export AS = @AS@
export AR = @AR@				#
export LD = @LD@
export OBJDUMP = @OBJDUMP@
export OBJCOPY = @OBJCOPY@
export STRIP = @STRIP@
export RM = @RM@				#
export CP = @CP@				#
export TAR = @TAR@
export SED = @SED@
export MKDIR = @MKDIR@			#
export CAT = @CAT@

export CCLIB = @CCLIB@
export CCLIB := $(realpath $(CCLIB))
export CCERT_LIB := /usr/local/lib/compcert/







######
# configuration definitions
######

export XMHFGEEC_TOTAL_UHSLABS := 1
export XMHFGEEC_TOTAL_UGSLABS := 1


#load base, at 36M
export XMHF_CONFIG_LOADADDR := 0x02400000
#load size, 450M
export XMHF_CONFIG_LOADMAXSIZE := 0x1C200000
#load max addr, 486M
export XMHF_CONFIG_LOADMAXADDR := 0x1E600000
#system max addr, 4GB
export XMHF_CONFIG_MAXSYSADDR := 0xFFFFFFFF


export XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES := 6
export XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES := 6

export XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES := 64

export XMHF_CONFIG_DEBUG_SERIAL_MAXCPUS	:= 8











######
# compiler/assembler flags
######

#----- build information (version)
#export XMHF_BUILD_VERSION := $(shell git describe --abbrev=0)
export XMHF_BUILD_VERSION := 1.0

#----- build information (revision)
#export XMHF_BUILD_REVISION_BRANCH := $(shell git rev-parse --abbrev-ref HEAD)
#export XMHF_BUILD_REVISION_COMMIT := $(shell git log --pretty=format:'%H' -n 1)
#export XMHF_BUILD_REVISION := $(XMHF_BUILD_REVISION_BRANCH)-$(XMHF_BUILD_REVISION_COMMIT)
export XMHF_BUILD_REVISION := cliff-jumper


#-----basic flags for compiling and assembling
#-----this is used by gcc/ld for generating object code from assembly and linking
FLAGS = -O0 
FLAGS += -m32
FLAGS += -nostdinc 

CCERT_FLAGS = -O
CCERT_FLAGS += -fno-fpu
CCERT_FLAGS += -fbitfields
CCERT_FLAGS += -fpacked-structs
CCERT_FLAGS += -fstruct-return
CCERT_FLAGS += -fno-inline-asm


FLAGS += $(ADDL_INCLUDES)
CCERT_FLAGS += $(ADDL_INCLUDES)
VFLAGS = $(V_ADDL_INCLUDES)  -cpp-extra-args=-D__XMHF_VERIFICATION__

#-----generate compiler/assembler defines from configuration options selected
FLAGS += -D___XMHF_BUILD_VERSION___=\"$(XMHF_BUILD_VERSION)\"
CCERT_FLAGS += -D___XMHF_BUILD_VERSION___=\"$(XMHF_BUILD_VERSION)\"
VFLAGS += -cpp-extra-args=-D___XMHF_BUILD_VERSION___=\"$(XMHF_BUILD_VERSION)\"

FLAGS += -D___XMHF_BUILD_REVISION___=\"$(XMHF_BUILD_REVISION)\"
CCERT_FLAGS += -D___XMHF_BUILD_REVISION___=\"$(XMHF_BUILD_REVISION)\"
VFLAGS += -cpp-extra-args=-D___XMHF_BUILD_REVISION___=\"$(XMHF_BUILD_REVISION)\"

# target cpu
ifeq ($(XMHF_TARGET_CPU), x86)
	FLAGS += -D__XMHF_TARGET_CPU_X86__
	CCERT_FLAGS += -D__XMHF_TARGET_CPU_X86__
	VFLAGS += -cpp-extra-args=-D__XMHF_TARGET_CPU_X86__
endif

# target container
ifeq ($(XMHF_TARGET_CONTAINER), vmx)
	FLAGS += -D__XMHF_TARGET_CONTAINER_VMX__
	CCERT_FLAGS += -D__XMHF_TARGET_CONTAINER_VMX__
	VFLAGS += -cpp-extra-args=-D__XMHF_TARGET_CONTAINER_VMX__
endif

# target platform
ifeq ($(XMHF_TARGET_PLATFORM), x86pc)
	FLAGS += -D__XMHF_TARGET_PLATFORM_X86PC__
	CCERT_FLAGS += -D__XMHF_TARGET_PLATFORM_X86PC__
	VFLAGS += -cpp-extra-args=-D__XMHF_TARGET_PLATFORM_X86PC__
endif

# target triad
ifeq ($(XMHF_TARGET_TRIAD), x86-vmx-x86pc)
	FLAGS += -D__XMHF_TARGET_TRIAD_X86_VMX_X86PC__
	CCERT_FLAGS += -D__XMHF_TARGET_TRIAD_X86_VMX_X86PC__
	VFLAGS += -cpp-extra-args=-D__XMHF_TARGET_TRIAD_X86_VMX_X86PC__
endif

# other options
ifeq ($(DEBUG_SERIAL), y)
	FLAGS += -D__DEBUG_SERIAL__
	CCERT_FLAGS += -D__DEBUG_SERIAL__
	VFLAGS += -cpp-extra-args=-D__DEBUG_SERIAL__

	FLAGS += -DDEBUG_PORT=$(DEBUG_SERIAL_PORT)
	CCERT_FLAGS += -DDEBUG_PORT=$(DEBUG_SERIAL_PORT)
	VFLAGS += -cpp-extra-args=-DDEBUG_PORT=$(DEBUG_SERIAL_PORT)

	FLAGS += -D__XMHF_CONFIG_DEBUG_SERIAL_MAXCPUS__=$(XMHF_CONFIG_DEBUG_SERIAL_MAXCPUS)
	CCERT_FLAGS += -D__XMHF_CONFIG_DEBUG_SERIAL_MAXCPUS__=$(XMHF_CONFIG_DEBUG_SERIAL_MAXCPUS)
	VFLAGS += -cpp-extra-args=-D__XMHF_CONFIG_DEBUG_SERIAL_MAXCPUS__=$(XMHF_CONFIG_DEBUG_SERIAL_MAXCPUS)
endif
ifeq ($(DRT), y)
	FLAGS += -D__DRT__
	CCERT_FLAGS += -D__DRT__
	VFLAGS += -cpp-extra-args=-D__DRT__
endif
ifeq ($(DMAP), y)
	FLAGS += -D__DMAP__
	CCERT_FLAGS += -D__DMAP__
	VFLAGS += -cpp-extra-args=-D__DMAP__
endif


# configuration definitions
FLAGS += -D__XMHFGEEC_TOTAL_UHSLABS__=$(XMHFGEEC_TOTAL_UHSLABS)
CCERT_FLAGS += -D__XMHFGEEC_TOTAL_UHSLABS__=$(XMHFGEEC_TOTAL_UHSLABS)
VFLAGS += -cpp-extra-args=-D__XMHFGEEC_TOTAL_UHSLABS__=$(XMHFGEEC_TOTAL_UHSLABS)

FLAGS += -D__XMHFGEEC_TOTAL_UGSLABS__=$(XMHFGEEC_TOTAL_UGSLABS)
CCERT_FLAGS += -D__XMHFGEEC_TOTAL_UGSLABS__=$(XMHFGEEC_TOTAL_UGSLABS)
VFLAGS += -cpp-extra-args=-D__XMHFGEEC_TOTAL_UGSLABS__=$(XMHFGEEC_TOTAL_UGSLABS)



FLAGS += -D__XMHF_CONFIG_LOADADDR__=$(XMHF_CONFIG_LOADADDR)
CCERT_FLAGS += -D__XMHF_CONFIG_LOADADDR__=$(XMHF_CONFIG_LOADADDR)
VFLAGS += -cpp-extra-args=-D__XMHF_CONFIG_LOADADDR__=$(XMHF_CONFIG_LOADADDR)

FLAGS += -D__XMHF_CONFIG_LOADMAXSIZE__=$(XMHF_CONFIG_LOADMAXSIZE)
CCERT_FLAGS += -D__XMHF_CONFIG_LOADMAXSIZE__=$(XMHF_CONFIG_LOADMAXSIZE)
VFLAGS += -cpp-extra-args=-D__XMHF_CONFIG_LOADMAXSIZE__=$(XMHF_CONFIG_LOADMAXSIZE)

FLAGS += -D__XMHF_CONFIG_LOADMAXADDR__=$(XMHF_CONFIG_LOADMAXADDR)
CCERT_FLAGS += -D__XMHF_CONFIG_LOADMAXADDR__=$(XMHF_CONFIG_LOADMAXADDR)
VFLAGS += -cpp-extra-args=-D__XMHF_CONFIG_LOADMAXADDR__=$(XMHF_CONFIG_LOADMAXADDR)

FLAGS += -D__XMHF_CONFIG_MAXSYSADDR__=$(XMHF_CONFIG_MAXSYSADDR)
CCERT_FLAGS += -D__XMHF_CONFIG_MAXSYSADDR__=$(XMHF_CONFIG_MAXSYSADDR)
VFLAGS += -cpp-extra-args=-D__XMHF_CONFIG_MAXSYSADDR__=$(XMHF_CONFIG_MAXSYSADDR)


FLAGS += -D__XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES__=$(XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES)
CCERT_FLAGS += -D__XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES__=$(XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES)
VFLAGS += -cpp-extra-args=-D__XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES__=$(XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES)

FLAGS += -D__XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES__=$(XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES)
CCERT_FLAGS += -D__XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES__=$(XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES)
VFLAGS += -cpp-extra-args=-D__XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES__=$(XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES)


FLAGS += -D__XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES__=$(XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES)
CCERT_FLAGS += -D__XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES__=$(XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES)
VFLAGS += -cpp-extra-args=-D__XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES__=$(XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES)




#-----export CFLAGS and ASFLAGS
ASFLAGS = $(FLAGS) -D__ASSEMBLY__
CFLAGS = $(FLAGS)

export ASFLAGS
export CFLAGS
export VFLAGS
export CCERT_FLAGS





